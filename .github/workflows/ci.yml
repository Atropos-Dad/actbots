name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]
  # Publish is triggered by a tag push (e.g. v0.1.0)
  release:
    types: [created]

jobs:
  build-test:
    name: "Lint, Type-check & Test (Python ${{ matrix.python-version }})"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Lint (ruff)
        run: ruff check .

      - name: Type checking (mypy)
        run: mypy .

      - name: Unit tests with coverage
        run: pytest --cov=jentic_agents --cov-report=xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.python-version }}.xml
          path: coverage.xml

  # Build & publish to PyPI on release tags (manual cut-over)
  publish:
    name: "Build & Publish to PyPI"
    needs: build-test
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Build wheel & sdist
        run: |
          python -m pip install --upgrade build
          python -m build --sdist --wheel --outdir dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          # Skip existing versions to make re-runs idempotent
          skip_existing: true