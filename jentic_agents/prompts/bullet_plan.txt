{
  "instruction": "Generate a concrete, API-centric multi-step plan to accomplish the given goal using Jentic tools (search_apis, load_execution_info, execute, etc.). Your plan should assume the agent has access to Jentic's unified API hub where it can discover and run operations from many providers.",

  "context": "Jentic workflow: 1) search_apis → 2) load_execution_info → 3) execute. The agent can chain multiple APIs across different vendors. Use already-known IDs (e.g., channel_id, guild_id) directly; only add discovery steps when information is missing. STEP IDENTIFICATION: Use multi-step when the goal requires data from one operation to complete another (dependency chain). Use single-step when all required information is directly available or can be inferred from the goal.",

  "inputs": {
    "goal": "{goal}"
  },

  "rules": [
    "Output a valid JSON array of step objects, with no markdown, dashes, or extra text.",
    "Each step MUST be a JSON object with at least 'step_type', 'text', and optionally 'store_key' fields.",
    "Each step MUST include a 'step_type' field: 'SEARCH', 'EXECUTE', or 'REASON'.",
    "If a step calls a tool and returns data needed later, append 'store_key' to save the result for later steps.",
    "CRITICAL: Break down complex operations requiring data lookup into multiple logical steps. Use this pattern: SEARCH (find operation) → EXECUTE (get data) → REASON (extract needed info) → SEARCH (find target operation) → EXECUTE (perform action).",
    "Multi-step is required when: creating items that need parent IDs, updating objects that need current state, performing actions on named resources, or when URLs contain IDs but specific child IDs are needed.",
    "Single-step is sufficient when: all required parameters are directly available, performing simple lookups, or when the operation doesn't depend on other data.",
    "If the goal provides URLs but you need specific child IDs (like list IDs from board URLs), add steps to extract or look up those IDs first.",
    "If required data is missing or needs to be resolved from names/URLs, add a step to search for or retrieve it first.",
    "Never mention login/auth steps or specific tool IDs; describe the action generically.",
    "Be explicit about the target object and purpose in each step.",
    "Use multiple APIs if necessary to reach the goal, but avoid redundant operations.",
    "For operations that need specific IDs from URLs or names, create dedicated lookup/extraction steps before the main action.",
    "Store intermediate results with descriptive keys for use in subsequent steps (e.g., 'target_list_id', 'board_data', 'user_info').",
    "Never reference a memory key unless it has been populated by a previous step in the plan",
    "IMPORTANT: Wrap your entire JSON array output in a markdown code block with triple backticks and json, like this: ``` ... ```",
    "If the goal provides a resource URL (e.g., board, repo, project, etc.) but the required full resource ID is not directly available, add a step to resolve or look up the full resource ID using the shortLink or identifier from the URL before making dependent API calls."
  ],

  "step_identification_guide": {
    "use_multi_step_when": [
      "Goal mentions creating/adding items to a named container (e.g., 'add card to Todo list', 'create issue in project')",
      "Goal provides parent URLs but needs child IDs (e.g., board URL but need list ID)",
      "Goal involves updating existing resources that require current state",
      "Goal mentions performing actions on named resources that need ID lookup",
      "Goal requires data from one API call to complete another API call"
    ],
    "use_single_step_when": [
      "All required IDs/parameters are directly provided or easily extractable",
      "Goal is a simple lookup or read operation",
      "Goal involves direct actions with known entities",
      "No dependency chain between operations exists"
    ],
    "pattern_examples": {
      "lookup_then_action": "SEARCH (find lookup op) → EXECUTE (get data) → REASON (extract ID) → SEARCH (find action op) → EXECUTE (perform action)",
      "state_then_update": "SEARCH (find get op) → EXECUTE (get current state) → REASON (identify changes) → SEARCH (find update op) → EXECUTE (apply changes)",
      "direct_action": "SEARCH (find operation) → EXECUTE (perform action)"
    }
  },

  "precedence_hierarchy": {
    "decision_order": [
      "1. ANALYZE GOAL: Does it require data from one operation to complete another?",
      "2. CHECK DEPENDENCIES: Are there parent-child relationships (board→list, org→repo, etc.)?",
      "3. EVALUATE INFORMATION: Are all required IDs/parameters directly available?",
      "4. DETERMINE COMPLEXITY: Simple lookup vs. create/update operations?"
    ],
    "multi_step_takes_precedence_when": [
      "ANY dependency chain exists between operations",
      "Goal contains words like 'add to', 'create in', 'update existing'",
      "URLs provided but child IDs needed (board URL → list ID)",
      "Named resources mentioned that require ID resolution"
    ],
    "single_step_override_when": [
      "All parameters explicitly provided in goal",
      "Direct action verbs with known entities (send, get, delete + specific ID)",
      "Simple read operations without dependencies"
    ],
    "when_in_doubt": "Default to multi-step to ensure proper data lookup"
  }
}